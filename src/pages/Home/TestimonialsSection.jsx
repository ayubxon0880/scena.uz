import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";

const testimonials = [
    {
        id: 1,
        name: "Sitora Muhamedova",
        text: "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (—à–∫–æ–ª–∞ –º—É–∑—ã–∫–∏) –æ—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞ –ø–µ—Ä–≤—ã–º —É—Ä–æ–∫–æ–º. –ë–ª–∞–≥–æ–¥–∞—Ä—é —á—Ç–æ –ø–µ—Ä–≤—ã–π –æ–ø—ã—Ç –º–µ–Ω—è –ø—Ä–∏—è—Ç–Ω–æ –≤–ø–µ—á–∞—Ç–ª–∏–ª. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–µ—Ä–Ω—É—Å—å –ø–æ –ø—Ä–∏–ª–µ—Ç—É. –°–∞–º–∞ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è —à–∫–æ–ª—ã –ø–æ –º–∏–º–æ –º—É–∑—ã–∫–∏ —Ç–∞–º –µ—â–µ –º–Ω–æ–≥–æ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –∂–∏–≤–æ—Ç–Ω—ã—Ö. –û–Ω–∏ –ø—Ä–æ–≤–æ–¥—è—Ç —Ä–∞–∑–Ω—ã–µ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è. –≠—Ç–æ –≤—Å–µ –æ—á–µ–Ω—å –±–ª–∏–∑–∫–æ –º–Ω–µ, —ç—Ç–æ –ø—Ä–∏—è—Ç–Ω–æ –∫–æ–≥–¥–∞ —Ç–µ–±—è –æ–∫—Ä—É–∂–∞—é—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—ã –Ω–æ –∏ –¥–æ–±—Ä—ã–µ –ª—é–¥–∏ üòä",
    },
    {
        id: 2,
        name: "–ê–∑–∏–∑–∞ –ò.",
        text: "–û—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω–∞ –æ–±—É—á–µ–Ω–∏–µ–º –≤ —ç—Ç–æ–π —à–∫–æ–ª–µ –º—É–∑—ã–∫–∏. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏. –ú–æ–∏ –º—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ª—É—á—à–∏–ª–∏—Å—å. –†–µ–∫–æ–º–µ–Ω–¥—É—é –≤—Å–µ–º!",
    },
    {
        id: 3,
        name: "–û–ª—å–≥–∞",
        text: "–°—ã–Ω —Ö–æ–¥–∏—Ç –Ω–∞ –±–∞—Ä–∞–±–∞–Ω—ã –∫ –æ—Ç–ª–∏—á–Ω–æ–º—É –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é –î–∞–≤—Ä–∞–Ω—É. –£—Ä–æ–∫–∏ —Å—ã–Ω—É –æ—á–µ–Ω—å –Ω—Ä–∞–≤—è—Ç—Å—è, —Ö–æ–¥–∏—Ç —Å –±–æ–ª—å—à–∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º, –∞ —è –≤–∏–∂—É —Ö–æ—Ä–æ—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç –∑–∞–Ω—è—Ç–∏–π, —Å—ã–Ω —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Å–µ–º–µ–π–Ω–æ–º –∞–Ω—Å–∞–º–±–ª–µ - —Ñ–æ—Ä—Ç–µ–ø–∏–∞–Ω–æ+–≥–∏—Ç–∞—Ä–∞+ –±–∞—Ä–∞–±–∞–Ω—ã!! ü§ò –°–ø–∞—Å–∏–±–æ!",
    },
];

export default function TestimonialsSection() {
    const [current, setCurrent] = useState(0);

    const nextSlide = () => {
        setCurrent((prev) => (prev === testimonials.length - 1 ? 0 : prev + 1));
    };

    const prevSlide = () => {
        setCurrent((prev) => (prev === 0 ? testimonials.length - 1 : prev - 1));
    };

    return (
        <section className="py-20 bg-white text-center relative overflow-hidden">
            <h2 className="text-5xl font-extrabold mb-12">–û—Ç–∑—ã–≤—ã</h2>

            {/* Wrapper */}
            <div className="relative max-w-3xl mx-auto px-6">
                <AnimatePresence mode="wait">
                    <motion.div
                        key={current}
                        initial={{ opacity: 0, x: 100 }}
                        animate={{ opacity: 1, x: 0 }}
                        exit={{ opacity: 0, x: -100 }}
                        transition={{ duration: 0.6, ease: "easeInOut" }}
                        className="flex flex-col items-center justify-center space-y-6 min-h-[420px]"
                    >
                        <div className="w-32 h-32 flex items-center justify-center rounded-full bg-lime-400 text-black text-5xl font-bold shadow-lg">
                            {testimonials[current].name.charAt(0)}
                        </div>
                        <h3 className="text-xl font-bold">{testimonials[current].name}</h3>
                        <p className="text-gray-700 text-lg leading-relaxed max-w-2xl">
                            {testimonials[current].text}
                        </p>
                    </motion.div>
                </AnimatePresence>

                {/* Left Button */}
                <button
                    onClick={prevSlide}
                    className="absolute left-0 top-1/2 -translate-y-1/2 text-4xl text-gray-400 hover:text-gray-600"
                >
                    &#10094;
                </button>

                {/* Right Button */}
                <button
                    onClick={nextSlide}
                    className="absolute right-0 top-1/2 -translate-y-1/2 text-4xl text-gray-400 hover:text-gray-600"
                >
                    &#10095;
                </button>
            </div>

            {/* Dots */}
            <div className="flex justify-center mt-6 space-x-2">
                {testimonials.map((_, index) => (
                    <span
                        key={index}
                        className={`w-3 h-3 rounded-full transition-all duration-300 ${
                            index === current ? "bg-gray-800 scale-125" : "bg-gray-300"
                        }`}
                    ></span>
                ))}
            </div>
        </section>
    );
}
